<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.48.0 (20210719.0153)
 -->
<!-- Title: Kratos::PowerIterationEigenvalueSolver&lt; TSparseSpaceType, TDenseSpaceType, TLinearSolverType, TPreconditionerType, TReordererType &gt; Pages: 1 -->
<svg width="262pt" height="1959pt"
 viewBox="0.00 0.00 262.00 1959.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1955)">
<title>Kratos::PowerIterationEigenvalueSolver&lt; TSparseSpaceType, TDenseSpaceType, TLinearSolverType, TPreconditionerType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#bfbfbf" stroke="black" points="31.5,-0.5 31.5,-519.5 222.5,-519.5 222.5,-0.5 31.5,-0.5"/>
<text text-anchor="start" x="39.5" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver&lt; TSparseSpaceType,</text>
<text text-anchor="start" x="39.5" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType, TLinearSolverType,</text>
<text text-anchor="middle" x="127" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TPreconditionerType, TReordererType &gt;</text>
<polyline fill="none" stroke="black" points="31.5,-467.5 222.5,-467.5 "/>
<text text-anchor="middle" x="127" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="31.5,-448.5 222.5,-448.5 "/>
<text text-anchor="start" x="39.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="39.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="39.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="39.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="39.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="39.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="39.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="39.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="39.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="39.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="39.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="39.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="39.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="39.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRequiredEigenvalueNumber</text>
<text text-anchor="start" x="39.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="39.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mQVector</text>
<text text-anchor="start" x="39.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPVector</text>
<text text-anchor="start" x="39.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRVector</text>
<text text-anchor="start" x="39.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PowerIterationEigenvalue</text>
<text text-anchor="start" x="39.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver()</text>
<text text-anchor="start" x="39.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="39.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="39.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RandomInitialize()</text>
<text text-anchor="start" x="39.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="39.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="39.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/de5/class_kratos_1_1_iterative_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-556.5 0,-1383.5 254,-1383.5 254,-556.5 0,-556.5"/>
<text text-anchor="start" x="8" y="-1371.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IterativeSolver</text>
<text text-anchor="start" x="8" y="-1360.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="8" y="-1349.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Preconditioner&lt; TSparseSpaceType,</text>
<text text-anchor="start" x="8" y="-1338.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt;, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="127" y="-1327.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="0,-1320.5 254,-1320.5 "/>
<text text-anchor="start" x="8" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mResidualNorm</text>
<text text-anchor="start" x="8" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationsNumber</text>
<text text-anchor="start" x="8" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBNorm</text>
<polyline fill="none" stroke="black" points="0,-1268.5 254,-1268.5 "/>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterationNeeded()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConverged()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedTransposeMult()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionerType</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mResidualNorm</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationsNumber</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBNorm</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPreconditioner</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTolerance</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationsNumber</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationNeeded()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedTransposeMult()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M127,-546.32C127,-537.43 127,-528.6 127,-519.85"/>
<polygon fill="none" stroke="midnightblue" points="123.5,-546.39 127,-556.39 130.5,-546.39 123.5,-546.39"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="36,-1420.5 36,-1950.5 218,-1950.5 218,-1420.5 36,-1420.5"/>
<text text-anchor="start" x="44" y="-1938.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="44" y="-1927.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="44" y="-1916.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, Reorderer&lt; TSparseSpaceType,</text>
<text text-anchor="middle" x="127" y="-1905.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType &gt; &gt;</text>
<polyline fill="none" stroke="black" points="36,-1898.5 218,-1898.5 "/>
<text text-anchor="middle" x="127" y="-1886.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="36,-1879.5 218,-1879.5 "/>
<text text-anchor="start" x="44" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="44" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="44" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="44" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="44" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="44" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="44" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="44" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="44" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="44" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="44" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="44" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="44" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="44" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="44" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="44" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="44" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="44" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="44" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="44" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="44" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="44" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="44" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="44" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="44" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="44" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="44" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="44" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="44" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="44" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="44" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="44" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="44" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="44" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="44" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="44" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="44" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="44" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="44" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="44" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="44" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M127,-1410.09C127,-1401.34 127,-1392.51 127,-1383.64"/>
<polygon fill="none" stroke="midnightblue" points="123.5,-1410.34 127,-1420.34 130.5,-1410.34 123.5,-1410.34"/>
</g>
</g>
</svg>
